{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","AddMessageForm","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iICG9KC,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,KAAKD,S,mCCQNE,EAVI,SAAAC,GACjB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACE,qBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCFjBC,EAJC,SAAAT,GAAK,OACnB,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,iCCC7BC,EAAcC,YAAiB,IAkBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAhBQ,SAAAb,GAAK,OAC1B,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZd,KAAK,qBAGT,8BACE,kDCcSe,EAzBC,SAAAvB,GACd,IAAIJ,EAAQI,EAAMwB,YAEdC,EAAkB7B,EAAM8B,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBN,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAC1E2B,EAAmBjC,EAAMkC,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,QAAUqB,EAAErB,SAAeqB,EAAE7B,OAMtF,OAAKF,EAAMH,OAGT,sBAAKM,UAAWC,IAAEsB,QAAlB,UACE,qBAAKvB,UAAWC,IAAE4B,aAAlB,SACIP,IAEJ,sBAAKtB,UAAWC,IAAE0B,SAAlB,UACE,8BAAOD,IACP,cAACI,EAAD,CAAgBlB,SAbF,SAACmB,GACnBlC,EAAMmC,YAAYD,EAAOE,yBAGD,cAAC,IAAD,CAAU7B,GAAI,WCG3B8B,sBACbC,aAdoB,SAAA1C,GACpB,MAAO,CACL4B,YAAa5B,EAAM4B,gBAGE,SAAAe,GACvB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,ULNF,SAAAK,GAAc,IACtCC,EADqC,uKAGvC,OAAKC,KAAK3C,MAAMH,OAET,cAAC4C,EAAD,eAAgBE,KAAK3C,QAFG,cAAC,IAAD,CAAUO,GAAG,eAHL,GACXqC,IAAMH,WAUtC,OAFqCH,YAAQ3C,EAAR2C,CAAoCI,KKE5DL,CAGbd","file":"static/js/4.b78c7072.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2uTEw\",\"dialogsItems\":\"Dialogs_dialogsItems__1VJpd\",\"active\":\"Dialogs_active__2HG0Q\",\"messages\":\"Dialogs_messages__1j5Dw\",\"message\":\"Dialogs_message__p7FpN\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n      return <Component { ...this.props } />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst DialogItem = props => {\r\n  let path = `/dialogs/${props.id}`\r\n\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import s from '../Dialogs.module.css'\r\n\r\nconst Message = props => (\r\n  <div className={s.dialog}>{props.message}</div>\r\n)\r\n\r\nexport default Message\r\n","import { Field, reduxForm } from \"redux-form\"\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\"\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageFrom = props => (\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field \r\n        component={Textarea}\r\n        validate={[required, maxLength50]}\r\n        placeholder='Enter your message'\r\n        name='newMessageBody'\r\n      />\r\n    </div>\r\n    <div>\r\n      <button>Send</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageFrom)\r\n","import s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nconst Dialogs = props => {\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n  let messagesElements = state.messages.map( m => <Message message={ m.message } key={m.id} /> )\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={'login'} />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        { dialogsElements }\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{ messagesElements }</div>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}