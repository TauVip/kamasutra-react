{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","components/Navbar/Navbar.module.css","api/api.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","assets/images/user.png","components/Users/User.jsx","components/Users/Users.jsx","utils/object-helpers.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","hoc/withSuspense.js","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","reportWebVitals.js","index.js","components/common/FormsControls/FormsControls.js","assets/images/preloader.gif","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Header","props","className","s","header","src","loginBlock","isAuth","onClick","to","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","required","Input","error","style","formSummaryError","length","stopSubmit","_error","formData","Navbar","nav","item","activeClassName","activeLink","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","styles","paginator","filter","p","map","cn","selectedPage","pageNumber","e","onPageChanged","User","user","photos","small","userPhoto","followed","disabled","followingInProgress","some","Users","totalUsersCount","users","u","updateObjectInArray","items","itemId","objPropName","newObjProps","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","count","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","compose","bind","page","totalCount","withSuspense","Suspense","fallback","INITIALIZED_SUCCESS","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Login","withRouter","app","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","document","getElementById","FormControl","hasError","meta","touched","formControl","children","Textarea","input","restProps","child","placeholder","validators","component","text","validate","preloader","width","height","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.79c912d9.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Andrey'},\r\n    {id: 3, name: 'Sveta'},\r\n    {id: 4, name: 'Sasha'},\r\n    {id: 5, name: 'Victor'},\r\n    {id: 6, name: 'Valera'}\r\n  ],\r\n  messages: [\r\n    {id: 1, message: 'Hi'},\r\n    {id: 2, message: 'How is your it-kamasutra?'},\r\n    {id: 3, message: 'Yo'},\r\n    {id: 4, message: 'Yo'},\r\n    {id: 5, message: 'Yo'}\r\n  ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody\r\n      return {\r\n        ...state,\r\n        messages: [ ...state.messages, { id: 6, message: body } ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = newMessageBody => (\r\n  { type: SEND_MESSAGE, newMessageBody }\r\n)\r\n\r\nexport default dialogsReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2R1s6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav___P81h\",\"item\":\"Navbar_item__1bwzG\",\"activeLink\":\"Navbar_activeLink__1msfd\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': 'a7b42ea1-e821-40bf-a2f5-193786ea3b1d'\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('Obsolete method. Please use profileAPI object')\r\n    return profileAPI.getProfile(userId)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`)\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status })\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe })\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n  }\r\n}\r\n","import { NavLink } from \"react-router-dom\"\r\nimport s from \"./Header.module.css\"\r\n\r\nconst Header = props => (\r\n  <header className={s.header}>\r\n    <img src='https://www.pngkey.com/png/full/961-9610434_png-file-svg-google-chrome-logo-png.png' />\r\n    <div className={s.loginBlock}>\r\n      { \r\n        props.isAuth ? \r\n        <div>\r\n          {props.login} - <button onClick={props.logout}>Log out</button>\r\n        </div> : <NavLink to={'/login'}>Login</NavLink> \r\n      }\r\n    </div>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI } from \"../api/api\"\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => (\r\n  { \r\n    type: SET_USER_DATA, \r\n    payload: { userId, email, login, isAuth } \r\n  }\r\n)\r\nexport const getAuthUserData = () => async dispatch => {\r\n  const response = await authAPI.me()\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? \r\n      response.data.messages[0] : 'Some error'\r\n    dispatch(stopSubmit('login', {_error: message}))\r\n  }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  const response = await authAPI.logout()\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header { ...this.props } />\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)\r\n","import { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { createField, Input } from '../common/FormsControls/FormsControls'\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = props => (\r\n  <form onSubmit={props.handleSubmit}>\r\n    { createField('Email', 'email', [required], Input) }\r\n\r\n    { createField('Password', 'password', [required], Input, {type: 'password'}) }\r\n\r\n    { createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me') }\r\n\r\n    {\r\n      props.error && <div className={style.formSummaryError}>\r\n        {props.error}\r\n      </div>\r\n    }\r\n    <div>\r\n      <button>Login</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst LoginPage = props => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(LoginPage)\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => (\r\n  <nav className={s.nav}>\r\n    <div className={s.item}>\r\n      <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n    </div>\r\n    <div className={`${s.item} ${s.activeLink}`}>\r\n      <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n    </div>\r\n    <div className={`${s.item} ${s.activeLink}`}>\r\n      <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/setting' activeClassName={s.activeLink}>Settings</NavLink>\r\n    </div>\r\n  </nav>\r\n)\r\n\r\nexport default Navbar\r\n","import { useState } from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Paginator = props => {\r\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n  let portionSize = 10\r\n\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && \r\n      <button \r\n        onClick={ () => setPortionNumber(portionNumber - 1) }\r\n      >PREV</button> }\r\n      {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\r\n      .map(p => (\r\n        <span \r\n          className={ cn({\r\n            [styles.selectedPage]: props.currentPage === p\r\n          }, styles.pageNumber) }\r\n          key={p}\r\n          onClick={e => props.onPageChanged(p)}\r\n        >{p}</span>\r\n      ))}\r\n      { portionCount > portionNumber &&\r\n        <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginator\r\n","export default __webpack_public_path__ + \"static/media/user.6008cd39.png\";","import styles from './users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nlet User = props => (\r\n  <div>\r\n    <span>\r\n      <div>\r\n        <NavLink to={'/profile/' + props.user.id}>\r\n          <img src={ props.user.photos.small != null ? props.user.photos.small : userPhoto } className={styles.userPhoto} />\r\n        </NavLink>\r\n      </div>\r\n      <div> { \r\n        props.user.followed ? \r\n        <button \r\n          disabled={props.followingInProgress.some(id => id === props.user.id)} \r\n          onClick={() => { props.unfollow(props.user.id) }}\r\n        >Unfollow</button> :\r\n        <button \r\n          disabled={props.followingInProgress.some(id => id === props.user.id)} \r\n          onClick={() => { props.follow(props.user.id) }}\r\n        >Follow</button> \r\n      } </div>\r\n    </span>\r\n    <span>\r\n      <span>\r\n        <div>{props.user.name}</div>\r\n        <div>{props.user.status}</div>\r\n      </span>\r\n      <span>\r\n        <div>{'props.user.location.country'}</div>\r\n        <div>{'props.user.location.city'}</div>\r\n      </span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nexport default User\r\n","import Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\n\r\nlet Users = props => (\r\n  <div>\r\n    <Paginator\r\n      currentPage={props.currentPage}\r\n      onPageChanged={props.onPageChanged}\r\n      totalItemsCount={props.totalUsersCount}\r\n      pageSize={props.pageSize}\r\n    />\r\n    <div> {\r\n      props.users.map(u => (\r\n        <User \r\n          key={u.id}\r\n          user={u}\r\n          followingInProgress={props.followingInProgress}\r\n          unfollow={props.unfollow}\r\n          follow={props.follow}\r\n        />\r\n      ))\r\n    } </div>\r\n  </div>\r\n)\r\n\r\nexport default Users\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => (\r\n  items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps }\r\n    }\r\n    return u\r\n  })\r\n)\r\n","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/object-helpers\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n      }\r\n    case UNFOLLOW: \r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n      }\r\n    case SET_USERS: \r\n      return { ...state, users: action.users }\r\n    case SET_CURRENT_PAGE: \r\n      return { ...state, currentPage: action.currentPage }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.count }\r\n    case TOGGLE_IS_FETCHING: \r\n      return { ...state, isFetching: action.isFetching }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: \r\n      return { \r\n        ...state, \r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId] \r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const followSuccess = userId => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = userId => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = users => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = isFetching => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => (\r\n  async dispatch => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n  }\r\n)\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n  const response = await apiMethod(userId)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = userId => (\r\n  async dispatch => (\r\n    followUnfollowFlow(\r\n      dispatch, \r\n      userId, \r\n      usersAPI.follow.bind(usersAPI), \r\n      followSuccess\r\n    )\r\n  )\r\n)\r\nexport const unfollow = userId => (\r\n  async dispatch => (\r\n    followUnfollowFlow(\r\n      dispatch, \r\n      userId, \r\n      usersAPI.unfollow.bind(usersAPI), \r\n      unfollowSuccess\r\n    )\r\n  )\r\n)\r\n\r\nexport default usersReducer\r\n","import { createSelector } from 'reselect'\r\n\r\nconst getUsersSelector = state => state.usersPage.users\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n  users => users.filter(u => true)\r\n)\r\n\r\nexport const getPageSize = state => state.usersPage.pageSize\r\n\r\nexport const getTotalUsersCount = state => state.usersPage.totalUsersCount\r\n\r\nexport const getCurrentPage = state => state.usersPage.currentPage\r\n\r\nexport const getIsFetching = state => state.usersPage.isFetching\r\n\r\nexport const getFollowingInProgress = state => state.usersPage.followingInProgress\r\n","import React from 'react'\r\nimport Users from './Users'\r\nimport { connect } from \"react-redux\";\r\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n\r\n  onPageChanged = pageNumber => {\r\n    this.props.requestUsers(pageNumber, this.props.pageSize)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.props.isFetching ? <Preloader /> : null }\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers\r\n}))(UsersContainer)\r\n","import React from 'react'\r\nimport Preloader from '../components/common/Preloader/Preloader'\r\n\r\nexport const withSuspense = Component => (\r\n  props => (\r\n    <React.Suspense fallback={<Preloader />}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  )\r\n)\r\n","import { getAuthUserData } from \"./auth-reducer\"\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => dispatch => {\r\n  let promise = dispatch(getAuthUserData())\r\n\r\n  promise.then(() => {\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\nexport default appReducer\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport './App.css'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport LoginPage from './components/Login/Login'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport UsersContainer from './components/Users/UsersContainer'\r\nimport { withSuspense } from './hoc/withSuspense'\r\nimport { initializeApp } from './redux/app-reducer'\r\n\r\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\n\r\n// import ProfileContainer from './components/Profile/ProfileContainer'\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper-content'>\r\n          <Route \r\n            path='/dialogs' \r\n            render={ withSuspense(DialogsContainer) } \r\n          />\r\n\r\n          <Route \r\n            path='/profile/:userId?' \r\n            render={ withSuspense(ProfileContainer) } \r\n          />\r\n\r\n          <Route \r\n            path='/users'\r\n            render={ () => <UsersContainer /> }\r\n          />\r\n\r\n          <Route \r\n            path='/login'\r\n            render={ () => <LoginPage />}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, { initializeApp }))(App)\r\n\r\n// 95 - ReactJS + github pages, разворачиваем наш проект deploy | 13:20 / 1:05:42\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState) => {\r\n  return state\r\n}\r\n\r\nexport default sidebarReducer\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport authReducer from './auth-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport profileReducer from './profile-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer'\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.store = store\r\n\r\nexport default store\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './redux/redux-store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>, document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { Field } from 'redux-form'\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = props => {\r\n  const hasError = props.meta.touched && props.meta.error\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div>\r\n        { props.children }\r\n      </div>\r\n      { hasError && <span>{props.meta.error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n  <div>\r\n    <Field \r\n      placeholder={placeholder} \r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    /> { text }\r\n  </div>\r\n)\r\n","export default __webpack_public_path__ + \"static/media/preloader.39ee2642.gif\";","import preloader from '../../../assets/images/preloader.gif'\r\n\r\nlet Preloader = () => (\r\n  <img \r\n    src={preloader}\r\n    width='150'\r\n    height='150'\r\n  />\r\n)\r\n\r\nexport default Preloader\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oQq9\",\"error\":\"FormsControls_error__sGJ9F\",\"formSummaryError\":\"FormsControls_formSummaryError__2hggv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2IOqG\",\"pageNumber\":\"Paginator_pageNumber__2Riy2\",\"selectedPage\":\"Paginator_selectedPage__MLyhx\"};","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Ex4wT\",\"loginBlock\":\"Header_loginBlock__1IDgX\"};","import { profileAPI, usersAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: \"Hi, how are you\", likesCount: 12},\r\n    {id: 2, message: \"It's my first post\", likesCount: 11},\r\n    {id: 3, message: \"Blabla\", likesCount: 11},\r\n    {id: 4, message: \"Dada\", likesCount: 11},\r\n  ],\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ADD_POST: \r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0\r\n      }\r\n      return { \r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: '' \r\n      }\r\n    case SET_STATUS: \r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return { \r\n        ...state, \r\n        profile: action.profile \r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postId)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = profile => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = status => ({ type: SET_STATUS, status })\r\nexport const deletePost = postId => ({ type: DELETE_POST, postId })\r\n\r\nexport const getUserProfile = userId => async dispatch => {\r\n  const response = await usersAPI.getProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = userId => async dispatch => {\r\n  const response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = status => async dispatch => {\r\n  const response = await profileAPI.updateStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n"],"sourceRoot":""}