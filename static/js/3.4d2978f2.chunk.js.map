{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.4d2978f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__pr37E\",\"posts\":\"MyPosts_posts__1ZjWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2WxW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Nuf7O\"};","import s from './Post.module.css';\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='http://pornzwezdy.ru/uploads/posts/2014-06/1402057502_b5296e4f6d3dbb33a40179df046b9c2c.17.jpg' />\r\n      { props.message }\r\n      <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = props => (\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field \r\n        name='newPostText' \r\n        component={Textarea} \r\n        placeholder='Post message'\r\n        validate={[required, maxLength]}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button>Add post</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts\r\n","import MyPosts from './MyPosts'\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (newPostText) => {\r\n    dispatch(addPostActionCreator(newPostText))\r\n  }\r\n})\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import { useEffect, useState } from \"react\"\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => setEditMode(true)\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = e => setStatus(e.target.value)\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={ activateEditMode }>\r\n            {props.status || '--------'}\r\n          </span>\r\n        </div>\r\n      }\r\n      { editMode &&\r\n        <div>\r\n          <input \r\n            onChange={onStatusChange} \r\n            autoFocus={true} \r\n            onBlur={deactivateEditMode} \r\n            value={status} \r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n","import s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n// import ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = props => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo \r\n        profile={props.profile} \r\n        status={props.status}\r\n        updateStatus={props.updateStatus} \r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile \r\n        { ...this.props } \r\n        profile={this.props.profile} \r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter\r\n)(ProfileContainer)\r\n "],"sourceRoot":""}